
volumes:
  db-backups:
  db-data:

services:
  db:
    image: kartoza/postgis:$POSTGRES_MAJOR_VERSION-$POSTGIS_MAJOR_VERSION.${POSTGIS_MINOR_RELEASE}
    volumes:
      - db-data:/var/lib/postgresql
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=$${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U docker -d gis"

  dbbackups:
    image: golav/pg-backup:$POSTGRES_MAJOR_VERSION-$POSTGIS_MAJOR_VERSION.${POSTGIS_MINOR_RELEASE}
    volumes:
      - db-backups:/backups
    environment:
      - DUMPPREFIX=PG
      - POSTGRES_HOST=db
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - RUN_AS_ROOT=true
      - CRON_SCHEDULE="*/5 * * * *"
      #- CONSOLE_LOGGING=TRUE
      #- DB_DUMP_ENCRYPTION=true
      #- DB_TABLES=TRUE
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
