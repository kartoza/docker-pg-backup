
volumes:
  pg-backup-data-dir:
  pg-data-dir:
  minio_data:

services:

  db:
    image: kartoza/postgis:17-3.5
    restart: 'always'
    volumes:
      - ./setup-db.sql:/docker-entrypoint-initdb.d/setup-db.sql
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - ACTIVATE_CRON=False
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"

  minio:
    image: quay.io/minio/minio
    environment:
      - MINIO_ROOT_USER=minio_admin
      - MINIO_ROOT_PASSWORD=secure_minio_secret
    entrypoint: /bin/bash
    command: -c 'minio server /data --console-address ":9001"'
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: curl --fail -s http://localhost:9000/ || exit 1

  pg_restore:
    image: golav/pg-backup:${TAG:-manual-build}
    restart: 'always'
    volumes:
      - pg-backup-data-dir:/backups
      - ./tests:/tests
      - ../utils:/lib/utils
    environment:
      - DUMPPREFIX=PG_gis
      - POSTGRES_HOST=db
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - TARGET_DB=data
      - WITH_POSTGIS=1
      - STORAGE_BACKEND=S3
      - ACCESS_KEY_ID=minio_admin
      - SECRET_ACCESS_KEY=secure_minio_secret
      - DEFAULT_REGION=us-west-2
      - BUCKET=backups
      - HOST_BASE=minio:9000
      - HOST_BUCKET=backup
      - SSL_SECURE=False
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"
